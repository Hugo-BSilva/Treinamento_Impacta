// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteEFP;

namespace TesteEFP.Migrations
{
    [DbContext(typeof(TesteEFPDBContext))]
    [Migration("20210922114133_UpdateValor_Total-TB_VENDA")]
    partial class UpdateValor_TotalTB_VENDA
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TesteEFP.Models.Produto", b =>
                {
                    b.Property<int>("Id_Produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUTO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data_Validade")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_VALIDADE");

                    b.Property<string>("Nome_Produto")
                        .HasColumnType("VARCHAR(250)")
                        .HasColumnName("NOME_PRODUTO");

                    b.Property<decimal>("Preco_Produto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRECO_PRODUTO");

                    b.Property<string>("Tipo_Produto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TIPO_PRODUTO");

                    b.HasKey("Id_Produto");

                    b.ToTable("TB_PRODUTO");
                });

            modelBuilder.Entity("TesteEFP.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data_Nascimento")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Nome_Usuario")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("DSC_USUARIO");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIO");
                });

            modelBuilder.Entity("TesteEFP.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_VENDA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<decimal>("Valor_Total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_TOTAL");

                    b.HasKey("Id");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("TB_VENDA");
                });

            modelBuilder.Entity("TesteEFP.Models.VendaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_VENDA_ITEM")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Produto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRODUTO");

                    b.Property<int>("Id_Venda")
                        .HasColumnType("int")
                        .HasColumnName("ID_VENDA");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("QUANTIDADE");

                    b.HasKey("Id");

                    b.HasIndex("Id_Produto");

                    b.HasIndex("Id_Venda");

                    b.ToTable("TB_VENDA_ITEM");
                });

            modelBuilder.Entity("TesteEFP.Models.Venda", b =>
                {
                    b.HasOne("TesteEFP.Models.Usuario", "Usuario")
                        .WithMany("Vendas")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TesteEFP.Models.VendaItem", b =>
                {
                    b.HasOne("TesteEFP.Models.Produto", "Produto")
                        .WithMany("ItensDoProdutoVendido")
                        .HasForeignKey("Id_Produto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TesteEFP.Models.Venda", "Venda")
                        .WithMany("Itens")
                        .HasForeignKey("Id_Venda")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("TesteEFP.Models.Produto", b =>
                {
                    b.Navigation("ItensDoProdutoVendido");
                });

            modelBuilder.Entity("TesteEFP.Models.Usuario", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("TesteEFP.Models.Venda", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
